import{_ as n,c as s,o as a,d as p}from"./app.28458000.js";const t='{"title":"拦截器配置","description":"","frontmatter":{"title":"拦截器配置","lang":"zn-CN"},"headers":[{"level":2,"title":"请求拦截器","slug":"请求拦截器"},{"level":3,"title":"onResolved","slug":"onresolved"},{"level":3,"title":"onRejected","slug":"onrejected"},{"level":2,"title":"响应拦截器","slug":"响应拦截器"},{"level":3,"title":"onResolved","slug":"onresolved-1"},{"level":3,"title":"onRejected","slug":"onrejected-1"},{"level":2,"title":"导出拦截器","slug":"导出拦截器"},{"level":2,"title":"完整的拦截器配置示例","slug":"完整的拦截器配置示例"}],"relativePath":"advance/interceptors.md","lastUpdated":1636812404319}',e={},o=[p('<h1 id="拦截器配置" tabindex="-1">拦截器配置 <a class="header-anchor" href="#拦截器配置" aria-hidden="true">#</a></h1><p><span style="background-image:linear-gradient(135deg, #4253d8, #d333ba);-webkit-background-clip:text;color:transparent;font-size:18px;">你想去便去？想来便来？你当这里是哪里</span></p><h2 id="请求拦截器" tabindex="-1">请求拦截器 <a class="header-anchor" href="#请求拦截器" aria-hidden="true">#</a></h2><p>你可以为每个请求拦截器配置 <code>onResolved</code> 或 <code>onRejected</code> 两个钩子函数。</p><h3 id="onresolved" tabindex="-1">onResolved <a class="header-anchor" href="#onresolved" aria-hidden="true">#</a></h3><p>我们会为 onResolved 钩子函数注入 config 和 options 两个参数：</p><ul><li><code>config: LuchRequestConfig</code>: luch-request 请求配置，详情参考 <a href="https://www.quanzhan.co/luch-request/guide/3.x/#%E5%85%A8%E5%B1%80%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">luch-request 请求配置</a></li><li><code>options: Object</code>: 应用配置，包含: { Router, store }，可根据需要扩展。</li></ul><h3 id="onrejected" tabindex="-1">onRejected <a class="header-anchor" href="#onrejected" aria-hidden="true">#</a></h3><p>我们会为 onRejected 钩子函数注入 error 和 options 两个参数：</p><ul><li><code>error: Error</code>: luch-request 请求错误对象，详情参考 <a href="https://www.quanzhan.co/luch-request/guide/3.x/#%E5%85%A8%E5%B1%80%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">luch-request 请求配置</a></li><li><code>options: Object</code>: 应用配置，包含: { Router, store }，可根据需要扩展。</li></ul><p>如下，为一个完整的请求拦截器配置：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> reqCommon <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 发送请求之前做些什么</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 格式化参数 (过滤参数中的空值)</span>\n    config<span class="token punctuation">.</span>params <span class="token operator">=</span> config<span class="token punctuation">.</span>params <span class="token operator">?</span> filterEmpty<span class="token punctuation">.</span><span class="token function">removeEmptyFields</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method <span class="token operator">!==</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      config<span class="token punctuation">.</span>data <span class="token operator">=</span> filterEmpty<span class="token punctuation">.</span><span class="token function">removeEmptyFields</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 请求携带 token 认证</span>\n    <span class="token keyword">const</span> access_token <span class="token operator">=</span> cookie<span class="token punctuation">.</span><span class="token function">access_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>custom<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>access_token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        config<span class="token punctuation">.</span>header<span class="token punctuation">[</span><span class="token string">&#39;X-Access-Token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> access_token\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;登录时效过期，请重新登录！&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          Router<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> config\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 请求出错时做些什么</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="响应拦截器" tabindex="-1">响应拦截器 <a class="header-anchor" href="#响应拦截器" aria-hidden="true">#</a></h2><p>响应拦截器也同样可以配置 <code>onResolved</code> 或 <code>onRejected</code> 两个钩子函数。</p><h3 id="onresolved-1" tabindex="-1">onResolved <a class="header-anchor" href="#onresolved-1" aria-hidden="true">#</a></h3><p>我们会为 onResolved 钩子函数注入 response 和 options 两个参数：</p><ul><li><code>response: LuchRequestConfig</code>: luch-request 响应对象，详情参考 <a href="https://www.quanzhan.co/luch-request/guide/3.x/#%E6%8B%A6%E6%88%AA%E5%99%A8" target="_blank" rel="noopener noreferrer">luch-request 响应对象</a></li><li><code>options: Object</code>: 应用配置，包含: { Router, store }，可根据需要扩展。</li></ul><h3 id="onrejected-1" tabindex="-1">onRejected <a class="header-anchor" href="#onrejected-1" aria-hidden="true">#</a></h3><p>我们会为 onRejected 钩子函数注入 error 和 options 两个参数：</p><ul><li><code>error: Error</code>: luch-request 请求错误对象，详情参考 <a href="https://www.quanzhan.co/luch-request/guide/3.x/#%E5%85%A8%E5%B1%80%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">luch-request 请求配置</a></li><li><code>options: Object</code>: 应用配置，包含: { Router, store }，可根据需要扩展。</li></ul><p>如下，为一个完整的响应拦截器配置：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> resp401 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 响应数据之前做点什么</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// we can do something ...</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 响应出错时做点什么</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// we can do something ...</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="导出拦截器" tabindex="-1">导出拦截器 <a class="header-anchor" href="#导出拦截器" aria-hidden="true">#</a></h2><p>定义好拦截器后，只需在 <a href="https://github.com/matrix-zyh/uni-app-matrix-admin/blob/master/src/http/interceptors.js" target="_blank" rel="noopener noreferrer">src/http/interceptors.js</a> 文件中导出即可。分为两类，<code>请求拦截器</code> 和 <code>响应拦截器</code>。如下：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  request<span class="token operator">:</span> <span class="token punctuation">[</span>reqCommon<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 请求拦截</span>\n  response<span class="token operator">:</span> <span class="token punctuation">[</span>resp401<span class="token punctuation">]</span>   <span class="token comment">// 响应拦截</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="完整的拦截器配置示例" tabindex="-1">完整的拦截器配置示例 <a class="header-anchor" href="#完整的拦截器配置示例" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> Cookie <span class="token keyword">from</span> <span class="token string">&quot;@utils/cookie&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> filterEmpty <span class="token keyword">from</span> <span class="token string">&#39;@/utils/filterEmpty&#39;</span>\n\n<span class="token comment">// 请求拦截</span>\n<span class="token keyword">const</span> reqCommon <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 发送请求之前做些什么</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">config<span class="token punctuation">,</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 格式化参数 (过滤参数中的空值)</span>\n    config<span class="token punctuation">.</span>params <span class="token operator">=</span> config<span class="token punctuation">.</span>params <span class="token operator">?</span> filterEmpty<span class="token punctuation">.</span><span class="token function">removeEmptyFields</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>params<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>method <span class="token operator">!==</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      config<span class="token punctuation">.</span>data <span class="token operator">=</span> filterEmpty<span class="token punctuation">.</span><span class="token function">removeEmptyFields</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token comment">// 请求携带 token 认证</span>\n    <span class="token keyword">const</span> access_token <span class="token operator">=</span> Cookie<span class="token punctuation">.</span><span class="token function">access_token</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>custom<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>access_token<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        config<span class="token punctuation">.</span>header<span class="token punctuation">[</span><span class="token string">&#39;X-Access-Token&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> access_token\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;登录时效过期，请重新登录！&#39;</span><span class="token punctuation">)</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          Router<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> config\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 请求出错时做些什么</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 401</span>\n<span class="token keyword">const</span> resp401 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 404</span>\n<span class="token keyword">const</span> resp404 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 500</span>\n<span class="token keyword">const</span> resp500 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 502</span>\n<span class="token keyword">const</span> resp502 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">502</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">502</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 503</span>\n<span class="token keyword">const</span> resp503 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">503</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> response\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">503</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$matrix<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>config<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 statusCode === 200</span>\n<span class="token keyword">const</span> resp200 <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">response<span class="token punctuation">,</span> <span class="token punctuation">{</span> Router <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">/* eslint-disable */</span>\n      <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token string">&#39;200&#39;</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>value\n        <span class="token keyword">case</span> <span class="token string">&#39;800&#39;</span><span class="token operator">:</span>\n        <span class="token keyword">case</span> <span class="token string">&#39;900&#39;</span><span class="token operator">:</span>\n          uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n          <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>\n        <span class="token keyword">case</span> <span class="token string">&#39;90000&#39;</span><span class="token operator">:</span>\n          uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;登录时效过期，请重新登录！&#39;</span><span class="token punctuation">)</span>\n          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n            Router<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n          <span class="token keyword">break</span>\n        <span class="token keyword">default</span><span class="token operator">:</span>\n          <span class="token keyword">break</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">/* eslint-enable */</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 请求超时</span>\n<span class="token keyword">const</span> timeout <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> errMsg <span class="token punctuation">}</span> <span class="token operator">=</span> error\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>errMsg <span class="token operator">===</span> <span class="token string">&#39;request:fail timeout&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;请求超时！&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 响应拦截 设备断网</span>\n<span class="token keyword">const</span> noNetwork <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> errMsg <span class="token punctuation">}</span> <span class="token operator">=</span> error\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>errMsg <span class="token operator">===</span> <span class="token string">&#39;request:fail &#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token string">&#39;网络连接失败，请检查网络！&#39;</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 请求拦截</span>\n  request<span class="token operator">:</span> <span class="token punctuation">[</span>reqCommon<span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// 响应拦截</span>\n  response<span class="token operator">:</span> <span class="token punctuation">[</span>resp401<span class="token punctuation">,</span> resp404<span class="token punctuation">,</span> resp500<span class="token punctuation">,</span> resp502<span class="token punctuation">,</span> resp503<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> noNetwork<span class="token punctuation">,</span> resp200<span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br></div></div><p>:::</p>',28)];var c=n(e,[["render",function(n,p,t,e,c,u){return a(),s("div",null,o)}]]);export default c;export{t as __pageData};
