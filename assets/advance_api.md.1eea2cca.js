import{_ as e,c as a,o,d}from"./app.28458000.js";const r='{"title":"全局API","description":"","frontmatter":{"title":"全局API","lang":"zn-CN"},"headers":[{"level":2,"title":"请求 Loading","slug":"请求-loading"},{"level":3,"title":"loading(bool = true)","slug":"loading-bool-true"},{"level":2,"title":"Console","slug":"console"},{"level":3,"title":"log","slug":"log"},{"level":3,"title":"warn","slug":"warn"},{"level":3,"title":"error","slug":"error"},{"level":2,"title":"工具","slug":"工具"},{"level":3,"title":"isEffectiveCommon(formatData)","slug":"iseffectivecommon-formatdata"},{"level":3,"title":"isEffectiveNumber(formatData)","slug":"iseffectivenumber-formatdata"},{"level":3,"title":"formatPhone(phone)","slug":"formatphone-phone"},{"level":3,"title":"formatMoney(number, symbol, places, thousand, decimal)","slug":"formatmoney-number-symbol-places-thousand-decimal"}],"relativePath":"advance/api.md","lastUpdated":1636812404319}',l={},i=[d('<h1 id="全局-api" tabindex="-1">全局 API <a class="header-anchor" href="#全局-api" aria-hidden="true">#</a></h1><p><span style="background-image:linear-gradient(135deg, #4253d8, #d333ba);-webkit-background-clip:text;color:transparent;font-size:18px;">怎么哪哪都有你</span></p><div class="tip custom-block"><p class="custom-block-title">温馨提示</p><p>我们提供了一些全局Api，在日常功能开发中或许会有帮助，它们均被绑定到了页面组件或子组件实例上。 在 <code>vue</code> 组件内可以直接通过 <code>this.$m[apiName]</code> 的方式调用，而在 <code>js</code> 页面内可以通过 <code>uni.$m[apiName]</code> 的方式调用。如下：</p></div><h2 id="请求-loading" tabindex="-1">请求 Loading <a class="header-anchor" href="#请求-loading" aria-hidden="true">#</a></h2><h3 id="loading-bool-true" tabindex="-1">loading(bool = true) <a class="header-anchor" href="#loading-bool-true" aria-hidden="true">#</a></h3><p>该 api 用于自定义控制请求加载 loading 的时机。接受一个参数：</p><ul><li><strong>bool (选填)</strong><br> bool为 <code>true</code> 的时候，打开loading，bool为 <code>false</code> 的时候，关闭loading。(默认为 <code>true</code>)</li></ul><h2 id="console" tabindex="-1">Console <a class="header-anchor" href="#console" aria-hidden="true">#</a></h2><h3 id="log" tabindex="-1">log <a class="header-anchor" href="#log" aria-hidden="true">#</a></h3><p>该 api 自定义了 console.log 的样式，在开发中不妨寻找一下有意思的乐趣。</p><h3 id="warn" tabindex="-1">warn <a class="header-anchor" href="#warn" aria-hidden="true">#</a></h3><p>该 api 自定义了 console.warn 的样式，在开发中不妨寻找一下有意思的乐趣。</p><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-hidden="true">#</a></h3><p>该 api 自定义了 console.error 的样式，在开发中不妨寻找一下有意思的乐趣。</p><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-hidden="true">#</a></h2><h3 id="iseffectivecommon-formatdata" tabindex="-1">isEffectiveCommon(formatData) <a class="header-anchor" href="#iseffectivecommon-formatdata" aria-hidden="true">#</a></h3><p>该 api 用于格式化页面数据。接受一个参数：</p><ul><li><strong>formatData (必填)</strong><br> 需要进行格式化的数据，如果值为 <code>&#39;&#39;</code>, <code>undefined</code>, <code>&#39;undefined&#39;</code>, <code>null</code>, <code>&#39;null&#39;</code>, <code>&#39;NaN&#39;</code>，将在页面默认显示 <code>-</code></li></ul><h3 id="iseffectivenumber-formatdata" tabindex="-1">isEffectiveNumber(formatData) <a class="header-anchor" href="#iseffectivenumber-formatdata" aria-hidden="true">#</a></h3><p>该 api 用于格式化页面数字。接受一个参数：</p><ul><li><strong>formatData (必填)</strong><br> 需要进行格式化的数据，如果值为 <code>&#39;&#39;</code>, <code>undefined</code>, <code>&#39;undefined&#39;</code>, <code>null</code>, <code>&#39;null&#39;</code>, <code>&#39;NaN&#39;</code>，将在页面默认显示 <code>0</code></li></ul><h3 id="formatphone-phone" tabindex="-1">formatPhone(phone) <a class="header-anchor" href="#formatphone-phone" aria-hidden="true">#</a></h3><p>该 api 用于格式化手机号码，保护用户隐私。接受一个参数：</p><ul><li><strong>phone (必填)</strong><br> 手机号码，格式化后在页面以 <code>188****8888</code> 这种形式展示。</li></ul><h3 id="formatmoney-number-symbol-places-thousand-decimal" tabindex="-1">formatMoney(number, symbol, places, thousand, decimal) <a class="header-anchor" href="#formatmoney-number-symbol-places-thousand-decimal" aria-hidden="true">#</a></h3><p>该 api 用于格式化金额。接受五个参数：</p><ul><li><strong>number (必填)</strong><br> 金额，可以为 <code>Number</code> 类型，以及 <code>String</code> 类型。</li><li><strong>symbol (选填)</strong><br> 金额标识 [￥, $]，默认为 <code>￥</code>。</li><li><strong>places (选填)</strong><br><code>.</code> 后面保留几位小数，默认保留两位小数。</li><li><strong>thousand (选填)</strong><br> 占位符，默认以 <code>,</code> 占位。<code>8,888.88</code></li><li><strong>decimal (选填)</strong><br> 分隔符 [.后保留两位小数]，默认以 <code>.</code> 分隔</li></ul>',27)];var t=e(l,[["render",function(e,d,r,l,t,n){return o(),a("div",null,i)}]]);export default t;export{r as __pageData};
