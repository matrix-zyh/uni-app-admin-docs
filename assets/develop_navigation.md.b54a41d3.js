import{_ as n,c as a,o as s,d as e}from"./app.28458000.js";const p='{"title":"编程式导航","description":"","frontmatter":{"title":"编程式导航","lang":"zn-CN"},"headers":[{"level":2,"title":"router.push","slug":"router-push"},{"level":3,"title":"router.push() 等同于 uni.navigateTo()","slug":"router-push-等同于-uni-navigateto"},{"level":2,"title":"router.replace","slug":"router-replace"},{"level":3,"title":"router.replace() 等同于 uni.redirectTo()","slug":"router-replace-等同于-uni-redirectto"},{"level":2,"title":"router.replaceAll","slug":"router-replaceall"},{"level":3,"title":"router.replaceAll() 等同于 uni.reLaunch()","slug":"router-replaceall-等同于-uni-relaunch"},{"level":2,"title":"router.pushTab","slug":"router-pushtab"},{"level":3,"title":"router.pushTab() 等同于 uni.switchTab","slug":"router-pushtab-等同于-uni-switchtab"},{"level":2,"title":"router.back","slug":"router-back"},{"level":3,"title":"router.back(n, {...}) 等同于 uni.navigateBack()","slug":"router-back-n-等同于-uni-navigateback"}],"relativePath":"develop/navigation.md","lastUpdated":1636812404319}',t={},r=[e('<h1 id="编程式导航" tabindex="-1">编程式导航 <a class="header-anchor" href="#编程式导航" aria-hidden="true">#</a></h1><p><span style="background-image:linear-gradient(135deg, #4253d8, #d333ba);-webkit-background-clip:text;color:transparent;font-size:18px;">你从哪里来，要到哪里去</span></p><h2 id="router-push" tabindex="-1">router.push <a class="header-anchor" href="#router-push" aria-hidden="true">#</a></h2><h3 id="router-push-等同于-uni-navigateto" tabindex="-1"><code>router.push() 等同于</code> <a href="https://uniapp.dcloud.io/api/router?id=navigateto" target="_blank" rel="noopener noreferrer">uni.navigateTo()</a> <a class="header-anchor" href="#router-push-等同于-uni-navigateto" aria-hidden="true">#</a></h3><p>注意：在 Vue 实例内部，你可以通过 $Router 访问路由实例。因此你可以调用 this.$Router.push。 想要导航到不同的 URL，则使用 router.push 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，则回到之前的 URL。</p><p>该方法的参数可以是一个字符串路径，或者一个描述地址的对象。例如:</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// 字符串</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/pages/router/router1&#39;</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 对象</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token operator">:</span><span class="token string">&#39;/pages/router/router1&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 命名的路由</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;router1&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> userId<span class="token operator">:</span> <span class="token string">&#39;123&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 带查询参数，变成 /router1?plan=private</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;router1&#39;</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">{</span> plan<span class="token operator">:</span> <span class="token string">&#39;private&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="注意：如果提供了-path，params-会被忽略，上述例子中的-query-并不属于这种情况。所以字符串时必须是绝对的路径，name-时传递的参数必须为-params，相反-path-必须对应-query。" tabindex="-1">注意：如果提供了 path，params 会被忽略，上述例子中的 query 并不属于这种情况。所以字符串时必须是绝对的路径，name 时传递的参数必须为 params，相反 path 必须对应 query。 <a class="header-anchor" href="#注意：如果提供了-path，params-会被忽略，上述例子中的-query-并不属于这种情况。所以字符串时必须是绝对的路径，name-时传递的参数必须为-params，相反-path-必须对应-query。" aria-hidden="true">#</a></h4><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token string">&#39;123&#39;</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; /user/123</span>\n\n<span class="token comment">// 这里的 params 不生效</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> userId <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// -&gt; /user</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="router-replace" tabindex="-1">router.replace <a class="header-anchor" href="#router-replace" aria-hidden="true">#</a></h2><h3 id="router-replace-等同于-uni-redirectto" tabindex="-1"><code>router.replace() 等同于</code> <a href="https://uniapp.dcloud.io/api/router?id=redirectto" target="_blank" rel="noopener noreferrer">uni.redirectTo()</a> <a class="header-anchor" href="#router-replace-等同于-uni-redirectto" aria-hidden="true">#</a></h3><p>跟 <code>router.push</code> 很像，唯一的不同就是，它不会向 history 添加新记录，而是跟它的方法名一样 —— 替换掉当前的 history 记录。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="router-replaceall" tabindex="-1">router.replaceAll <a class="header-anchor" href="#router-replaceall" aria-hidden="true">#</a></h2><h3 id="router-replaceall-等同于-uni-relaunch" tabindex="-1"><code>router.replaceAll() 等同于</code> <a href="https://uniapp.dcloud.io/api/router?id=relaunch" target="_blank" rel="noopener noreferrer">uni.reLaunch()</a> <a class="header-anchor" href="#router-replaceall-等同于-uni-relaunch" aria-hidden="true">#</a></h3><p>跟 <code>router.push</code> 很像，唯一的不同就是，它不会向 history 添加新记录，而是将所有的页面都关掉，打开一个新的页面。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="router-pushtab" tabindex="-1">router.pushTab <a class="header-anchor" href="#router-pushtab" aria-hidden="true">#</a></h2><h3 id="router-pushtab-等同于-uni-switchtab" tabindex="-1"><code>router.pushTab() 等同于</code> <a href="https://uniapp.dcloud.io/api/router?id=switchtab" target="_blank" rel="noopener noreferrer">uni.switchTab</a> <a class="header-anchor" href="#router-pushtab-等同于-uni-switchtab" aria-hidden="true">#</a></h3><p>跟 <code>router.push</code> 很像，打开 <code>uni-app</code> 自带的 tab 菜单</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">pushTab</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="router-back" tabindex="-1">router.back <a class="header-anchor" href="#router-back" aria-hidden="true">#</a></h2><h3 id="router-back-n-等同于-uni-navigateback" tabindex="-1"><code>router.back(n, {...}) 等同于</code> <a href="https://uniapp.dcloud.io/api/router?id=navigateback" target="_blank" rel="noopener noreferrer">uni.navigateBack()</a> <a class="header-anchor" href="#router-back-n-等同于-uni-navigateback" aria-hidden="true">#</a></h3><p>这个方法的参数是一个正整数，意思是在 history 记录中后退多少步，类似 <code>window.history.go(n)</code>。</p><div class="language-js line-numbers-mode"><pre><code><span class="token comment">// 后退 2 步记录</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// 如果 history 记录不够用，那就默默地失败呗</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Router<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>更多详细使用方法，请查看 <a href="https://hhyang.cn/v2/" target="_blank" rel="noopener noreferrer">uni-simple-router 官方文档</a></p>',26)];var o=n(t,[["render",function(n,e,p,t,o,c){return s(),a("div",null,r)}]]);export default o;export{p as __pageData};
